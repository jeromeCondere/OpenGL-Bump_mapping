uniform vec3 LightPosition;

varying vec3 LightDir;
varying vec3 EyeDir;
varying vec2 TexCoord;

void main()
{
vec3 tangent; 
   vec3 binormal; 
vec3 c1 = cross(gl_Normal, vec3(0.0, 0.0, 1.0)); 
   vec3 c2 = cross(gl_Normal, vec3(0.0, 1.0, 0.0)); 
   
   if(length(c1)>length(c2))
   {
      tangent = c1;   
   }
   else
   {
      tangent = c2;   
   }


EyeDir = vec3(gl_ModelViewMatrix * gl_Vertex);
TexCoord = gl_MultiTexCoord0.st;
vec3 n = normalize(gl_NormalMatrix * gl_Normal);
vec3 t = normalize(gl_NormalMatrix * tangent);
vec3 b = cross(n, t);
vec3 v;
v.x = dot(LightPosition, t);
v.y = dot(LightPosition, b);
v.z = dot(LightPosition, n);
LightDir = normalize(v);
v.x = dot(EyeDir, t);
v.y = dot(EyeDir, b);
v.z = dot(EyeDir, n);
EyeDir = normalize(v);

   gl_Position = ftransform();
}