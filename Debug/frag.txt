uniform sampler2D Tex0;
uniform sampler2D Tex1;
varying vec2 TexCoord;


varying vec3 LightDir;
varying vec3 EyeDir;
uniform float invRadius;

void main(void)
{
float distSqr = dot( LightDir,  LightDir);
   float att = clamp(1.0 - invRadius * sqrt(distSqr), 0.0, 1.0);

   vec3 lVec =  LightDir * inversesqrt(distSqr);

   vec3 vVec = normalize(EyeDir);
   
   vec4 base = texture2D(Tex0, TexCoord);
   
   vec3 bump = normalize( texture2D(Tex1, TexCoord).xyz * 2.0 - 1.0);

   vec4 vAmbient = gl_LightSource[0].ambient * gl_FrontMaterial.ambient;

   float diffuse = max( dot(lVec, bump), 0.0 );
   
   vec4 vDiffuse = gl_LightSource[0].diffuse * gl_FrontMaterial.diffuse * 
               diffuse;   

   float specular = pow(clamp(dot(reflect(-lVec, bump), vVec), 0.0, 1.0), 
                    20 );
   
   vec4 vSpecular = gl_LightSource[0].specular * gl_FrontMaterial.specular * 
                specular;   
   
   gl_FragColor =vec4 ( vAmbient*base + 
                vDiffuse*base + 
                vSpecular)*1.2*att ;

}